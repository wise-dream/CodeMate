#!/usr/bin/env bash
set -euo pipefail

DRY_RUN=false

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Chocolatey (Windows) ---
check_choco() {
  if ! command -v choco &>/dev/null; then
    echo "‚ö†Ô∏è  Chocolatey –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    powershell.exe -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; \
      [System.Net.ServicePointManager]::SecurityProtocol = 'Tls12'; \
      iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
    if ! command -v choco &>/dev/null; then
      echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Chocolatey. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: https://chocolatey.org/install"
      exit 1
    fi
  fi
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ü–û ---
verify_installed() {
  command -v "$2" &>/dev/null
}

# --- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (Windows) ---
force_uninstall() {
  local pkg="$1"
  echo "‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ $pkg..."
  rm -rf "/c/ProgramData/chocolatey/lib/$pkg" 2>/dev/null || true
  rm -rf "/c/ProgramData/chocolatey/bin/$pkg*" 2>/dev/null || true
  echo "‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ $pkg –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
}

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ (Linux) ---
ensure_repos() {
  local tool=$1
  case $tool in
    "Docker")
      sudo install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
      ;;
    "VS Code")
      sudo install -m 0755 -d /etc/apt/keyrings
      wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/keyrings/packages.microsoft.gpg >/dev/null
      echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | sudo tee /etc/apt/sources.list.d/vscode.list >/dev/null
      ;;
  esac
}

# --- –°–ª–æ–≤–∞—Ä–∏ –ø–∞–∫–µ—Ç–æ–≤ ---
declare -A PKG_CHOCOLATEY=(
  ["GCC"]="mingw-w64"
  ["Make"]="make"
  ["Git"]="git"
  ["Python"]="python"
  ["Node.js"]="nodejs"
  ["Docker"]="docker-desktop"
  ["VS Code"]="vscode"
  ["curl"]="curl"
  ["wget"]="wget"
  ["PostgreSQL Client"]="postgresql"
  ["MySQL Client"]="mysql"
  ["SQLite"]="sqlite"
  ["DBeaver"]="dbeaver"
  ["Java JDK"]="temurin11"
  ["Go"]="golang"
  ["Rust"]="rust"
  ["PHP"]="php"
)

declare -A PKG_APT=(
  ["GCC"]="build-essential"
  ["Make"]="make"
  ["Git"]="git"
  ["Python"]="python3"
  ["Node.js"]="nodejs npm"
  ["Docker"]="docker-ce docker-ce-cli containerd.io"
  ["VS Code"]="code"
  ["curl"]="curl"
  ["wget"]="wget"
  ["PostgreSQL Client"]="postgresql-client"
  ["MySQL Client"]="mysql-client"
  ["SQLite"]="sqlite3"
  ["DBeaver"]="dbeaver"
  ["Java JDK"]="openjdk-11-jdk"
  ["Go"]="golang-go"
  ["Rust"]="rustc"
  ["PHP"]="php"
)

PKG_MANAGER="apt-get"
if command -v choco &>/dev/null; then
  PKG_MANAGER="choco"
fi

check_choco

# --- –ú–µ–Ω—é ---
tools=( "GCC" "Make" "Git" "Python" "Node.js" "Docker" "VS Code" "curl" "wget" "PostgreSQL Client" "MySQL Client" "SQLite" "DBeaver" "Java JDK" "Go" "Rust" "PHP" )

echo "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å Git Bash —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
echo "‚ö†Ô∏è  –ë–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏/—É–¥–∞–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è —Å –æ—à–∏–±–∫–∞–º–∏."
echo "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª):"
for i in "${!tools[@]}"; do echo "$i) ${tools[$i]}"; done
read -rp "> " selection

echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: (1 - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, 2 - –£–¥–∞–ª–∏—Ç—å)"
read -rp "> " action

for idx in $selection; do
  tool="${tools[$idx]}"
  case $action in
    1)
      if verify_installed "$tool" "$tool" || verify_installed "$tool" "${tool,,}"; then
        echo "‚úÖ $tool —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        continue
      fi
      echo "üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é $tool..."
      case $PKG_MANAGER in
        choco) choco install -y "${PKG_CHOCOLATEY[$tool]}" ;;
        apt-get)
          ensure_repos "$tool"
          sudo apt-get update -qq
          sudo apt-get install -y ${PKG_APT[$tool]}
          ;;
      esac
      ;;
    2)
      echo "üîπ –£–¥–∞–ª—è—é $tool..."
      case $PKG_MANAGER in
        choco)
          if ! choco uninstall -y "${PKG_CHOCOLATEY[$tool]}" --skip-autouninstaller; then
            force_uninstall "${PKG_CHOCOLATEY[$tool]}"
          fi
          ;;
        apt-get) sudo apt-get purge -y ${PKG_APT[$tool]} || true ;;
      esac
      ;;
  esac
done

echo "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
