#!/bin/bash
set -e

# =========================
# CodeMate - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Dev-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
# =========================

function info_admin_warning {
    echo "‚ÑπÔ∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å Git Bash —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã Chocolatey."
    echo "   (–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ Git Bash –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ–π)"
    echo "üëâ –ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å:"
    echo "   1Ô∏è‚É£ –ó–∞–∫—Ä–æ–π—Ç–µ —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ Git Bash"
    echo "   2Ô∏è‚É£ –ù–∞–π–¥–∏—Ç–µ —è—Ä–ª—ã–∫ 'Git Bash'"
    echo "   3Ô∏è‚É£ –ü–ö–ú ‚Üí '–ó–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'"
    echo
    read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞? [y/N]: " confirm
    [[ "$confirm" != "y" && "$confirm" != "Y" ]] && exit 1
}

function ensure_choco {
    if ! command -v choco &>/dev/null; then
        echo "‚ö†Ô∏è Chocolatey –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        powershell.exe -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; \
        [System.Net.ServicePointManager]::SecurityProtocol = 'Tls12'; \
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"
        echo "‚úÖ Chocolatey —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Git Bash –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
        exit 0
    else
        echo "‚úÖ Chocolatey –Ω–∞–π–¥–µ–Ω"
    fi
}

function install_choco { local pkg=$1; if choco list --local-only | grep -iq "^$pkg "; then echo "‚úÖ $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; else choco install "$pkg" -y; fi; }
function uninstall_choco { local pkg=$1; if choco list --local-only | grep -iq "^$pkg "; then choco uninstall "$pkg" -y; else echo "‚ö†Ô∏è $pkg –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Chocolatey"; fi; }

function install_rust { if command -v rustc &>/dev/null; then echo "‚úÖ Rust —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; else curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y; source $HOME/.cargo/env; fi; }
function uninstall_rust { if command -v rustup &>/dev/null; then rustup self uninstall -y; else echo "‚ö†Ô∏è Rust –Ω–µ –Ω–∞–π–¥–µ–Ω"; fi; }

function install_go { install_choco golang; }
function uninstall_go { uninstall_choco golang; }

TOOLS=(
    "GCC:gcc"
    "Make:make"
    "Git:git"
    "Python:python"
    "Node.js:nodejs-lts"
    "Docker:docker-desktop"
    "VS Code:visualstudiocode"
    "curl/wget:curl"
    "PostgreSQL Client:postgresql"
    "MySQL Client:mysql"
    "SQLite:sqlite"
    "DBeaver:dbeaver"
    "Java JDK:openjdk"
    "Go:golang"
    "Rust:rustup"
    "PHP:php"
)

info_admin_warning
ensure_choco

echo "üì¶ –ü–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä: windows"
echo "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1 3 5):"
for i in "${!TOOLS[@]}"; do echo "$((i+1))) ${TOOLS[$i]%%:*}"; done

read -rp "–í–∞—à –≤—ã–±–æ—Ä: " choices
read -rp $'\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n2) –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n–í–∞—à –≤—ã–±–æ—Ä: ' action

for num in $choices; do
    tool_name="${TOOLS[$((num-1))]%%:*}"
    tool_pkg="${TOOLS[$((num-1))]##*:}"
    echo -e "\n=== ‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞: $tool_name ==="
    case $tool_name in
        "Rust") [[ "$action" == "1" ]] && install_rust || uninstall_rust ;;
        "Go") [[ "$action" == "1" ]] && install_go || uninstall_go ;;
        *) [[ "$action" == "1" ]] && install_choco "$tool_pkg" || uninstall_choco "$tool_pkg" ;;
    esac
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ: $tool_name"
done

echo "üéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
